/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.thlink.sinacorpdfparser;

import org.apache.commons.cli.CommandLine;
import org.apache.commons.cli.CommandLineParser;
import org.apache.commons.cli.DefaultParser;
import org.apache.commons.cli.HelpFormatter;
import org.apache.commons.cli.Options;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.ParseException;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;

import freemarker.template.TemplateException;

public class App {

	public static void main(String[] args)
			throws IOException, TemplateException, IllegalArgumentException, IllegalAccessException, ParseException {

		CommandLineParser cmdLineParser = new DefaultParser();
		HelpFormatter formatter = new HelpFormatter();
		PrintWriter writer = new PrintWriter(System.out);
		ClienteBuilder clienteBuilder = new ClienteBuilder();
		ArrayList<OpcaoExportacao> opcoesExportacao= new ArrayList<OpcaoExportacao> ();
		CommandLine cmd;
		
		Options options = new Options();
		
		options.addOption(Option.builder()
				.longOpt("arquivo")
				.argName("localizacao do arquivo .pdf")
				.hasArg()
				.desc("caminho do arquivo .pdf")
				.build());

		options.addOption(Option.builder()
				.longOpt("diretorio")
				.argName("diretório com as notas em pdf")
				.hasArg()
				.desc("diretório com as notas de negociação")
				.build());
		
		options.addOption(Option.builder()
				.longOpt("senha")
				.argName("senha do arquivo")
				.hasArg()
				.desc("senha do arquivo, quando houver")
				.build());

		options.addOption("bovespa", false, "notas de corretagem de operacoes na bovespa")
				.addOption("bmf", false, "notas de corretagem de operacoes na bmf")
				.addOption("json", false, "exportar para o formato .json")
				.addOption("csv", false, "exportar para o formato .csv");

		cmd = cmdLineParser.parse(options, args);
		 
		if (!cmd.hasOption("arquivo") && !cmd.hasOption("diretorio")) {
			formatter.printUsage(writer, 80, "java -jar build/libs/SinacorPDFParser-all.jar", options);
			writer.flush();
			System.exit(0);
		} 
		
		if(cmd.hasOption("arquivo")) {
			clienteBuilder.setCaminho(cmd.getOptionValue("arquivo"));
			clienteBuilder.setFonteArquivo(true);
		}

		if(cmd.hasOption("diretorio")) {
			clienteBuilder.setCaminho(cmd.getOptionValue("diretorio"));
			clienteBuilder.setFonteDiretorio(true);
		}
		
		if (cmd.hasOption("senha")) {
			clienteBuilder.setSenha(cmd.getOptionValue("senha"));
		}
	
		if (cmd.hasOption("json")) {
			opcoesExportacao.add(OpcaoExportacao.JSON);
			clienteBuilder.setOpcaoExportacao(opcoesExportacao);
		}
		
		if (cmd.hasOption("csv")) {
			opcoesExportacao.add(OpcaoExportacao.CSV);
			clienteBuilder.setOpcaoExportacao(opcoesExportacao);;
		}
		
		if (cmd.hasOption("bovespa")) {
			clienteBuilder.setParser(new ParserBovespa());
			clienteBuilder.setTipo(NotaNegociacao.Tipos.BOVESPA);
			System.out.println((clienteBuilder.build()).executar());
		}
		
		if (cmd.hasOption("bmf")) {
			clienteBuilder.setParser(new ParserBMF());
			clienteBuilder.setTipo(NotaNegociacao.Tipos.BMF);
			System.out.println((clienteBuilder.build()).executar());
		}
			
		if (!cmd.hasOption("bovespa") && !cmd.hasOption("bmf")) {
			clienteBuilder.setParser(new ParserBovespa());
			clienteBuilder.setTipo(NotaNegociacao.Tipos.BOVESPA);
			System.out.println((clienteBuilder.build()).executar());
			clienteBuilder.setParser(new ParserBMF());
			clienteBuilder.setTipo(NotaNegociacao.Tipos.BMF);
			System.out.println((clienteBuilder.build()).executar());
		}
			
	}
}
